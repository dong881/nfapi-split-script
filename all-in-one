#!/bin/bash
source ./VARIABLE.sh
wait_sec=25
#######################   For First time
# sudo apt-get install moreutils

# Common path
Target_PATH="."
LOG_PATH="$Target_PATH/LOG"
LOCKFILE="$Target_PATH/tmp-build_run.lock"

mkdir -p "$LOG_PATH"

# Check if the lock file exists
if [ -e $LOCKFILE ]; then
    echo "Another user is currently building and running the code. Please wait."
    exit 1
else
    bash "$Target_PATH/exit"
    # Create the lock file
    touch $LOCKFILE
    echo -e "Set ifconfig\r"
    ./set-ifconfig
    # echo -e "execute OAI Core Network\r"
    # ./cn
    sudo echo -e "Start TCPdump...\r"
    sudo tcpdump -i lo -nn '(proto SCTP) or (proto UDP)' -w $LOG_PATH/nFAPI_TCPdump.pcap &
    # sudo tcpdump -i lo -nn -w $LOG_PATH/nFAPI_TCPdump.pcap -U&
    echo -e "execute OAI VNF\r"
    stdbuf -oL ./vnf 2>&1 | ts &> "$LOG_PATH/VNF-nfapi-fixes.log" &
    echo -e "execute OAI PNF\r"
    stdbuf -oL ./pnf 2>&1 | ts &> "$LOG_PATH/PNF-nfapi-fixes.log" &
    echo -e "execute OAI UE\r"
    stdbuf -oL ./ue 2>&1 | ts &> "$LOG_PATH/UE-nfapi-fixes.log" &
    # bash "./ping-autoExecute" &
    # bash "./iperf-client-autoExecute" &

    echo -e "The script automatically closes after $wait_sec seconds...\r"
    ####################### Wait for the specified number of seconds
    sleep $wait_sec
    bash "$Target_PATH/exit"
    echo -e "Time to $wait_sec seconds...\r"
    # kill $!
    echo -e "END\r"
    # # Remove the lock file
    # rm $LOCKFILE
fi